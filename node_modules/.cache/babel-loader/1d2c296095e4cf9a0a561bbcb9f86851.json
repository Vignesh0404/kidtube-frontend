{"ast":null,"code":"import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport Comment from \"./Comment\";\nimport { axiosInstance } from \"../utils/axiosConfig\";\nimport Swal from \"sweetalert2\";\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 30px;\n  color: ${({\n  theme\n}) => theme.text};\n`;\nconst NewComment = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 20px;\n`;\nconst Avatar = styled.img`\n  width: 50px;\n  height: 50px;\n  border-radius: 50%;\n  background-color: #999;\n`;\nconst Input = styled.input`\n  width: 100%;\n  padding: 5px;\n  border: none;\n  border-bottom: 1px solid ${({\n  theme\n}) => theme.softHr};\n  background-color: transparent;\n  color: ${({\n  theme\n}) => theme.text};\n  outline: none;\n`;\nconst EmptyCommentsText = styled.span``;\nconst Button = styled.button`\n  padding: 5px 15px;\n  background-color: transparent;\n  border: 1px solid #3ea6ff;\n  color: #3ea6ff;\n  cursor: pointer;\n  border-radius: 3px;\n  font-weight: 500;\n`;\nconst ButtonsContainer = styled.div`\n  display: flex;\n  justify-content: end;\n  gap: 5px;\n`;\n\n// const Comments = ({ videoId, loggedInUser }) => {\n//   const [comments, setComments] = useState([]);\n//   const [newCommentText, setNewCommentText] = useState(\"\");\n//   const [toggleCommentButtons, settoggleCommentButtons] = useState(false);\n\n//   useEffect(() => {\n//     const fetchComments = async () => {\n//       try {\n//         const res = await axiosInstance.get(`/comments/${videoId}`);\n//         console.log(res.data);\n//         setComments((prev) => res.data.comments);\n//       } catch (error) {\n//         console.log(error);\n//         Swal.fire({\n//           icon: \"error\",  \n//           title: \"Error\",\n//           text: error.response.data.error || \"Error while fetching comments\",\n//         });\n//       }\n//     };\n\n//     fetchComments();\n//   }, [videoId]);\n\n//   const handleCommentSubmission = async (e) => {\n//     console.log(newCommentText);\n//     if (!loggedInUser) {\n//       Swal.fire({\n//         icon: \"error\",\n//         title: \"Oops...\",\n//         text: \"Sign In required!\",\n//       });\n//       settoggleCommentButtons((prev) => false);\n//       return;\n//     }\n//     try {\n//       const res = await axiosInstance.post(`/comments`, {\n//         videoId,\n//         description: newCommentText,\n//       });\n//       Swal.fire(`Good job!`, \"Your comment was Successful!\", \"success\");\n//       setComments((prev) => [...prev, res.data.comment]);\n//       setNewCommentText(\"\");\n//       settoggleCommentButtons((prev) => false);\n//     } catch (error) {\n//       console.log(error);\n//       Swal.fire({\n//         icon: \"error\",\n//         title: \"Error\",\n//         text: error.response.data.error || \"Unable to post a comment\",\n//       });\n//     }\n//   };\n\n//   const handleCancel = (e) => {\n//     setNewCommentText(\"\");\n//     settoggleCommentButtons((prev) => false);\n//   };\n\n//   return (\n//     <Container>\n//       {loggedInUser && (\n//         <NewComment>\n//           <Avatar src={loggedInUser?.img} />\n//           <Input\n//             placeholder=\"Add a comment...\"\n//             value={newCommentText}\n//             onChange={(e) => setNewCommentText(e.target.value)}\n//             onFocus={(e) => settoggleCommentButtons((prev) => true)}\n//           />\n//         </NewComment>\n//       )}\n\n//       <ButtonsContainer style={{ display: !toggleCommentButtons && \"none\" }}>\n//         <Button onClick={handleCancel}>Cancel</Button>\n//         <Button onClick={handleCommentSubmission}>Comment</Button>\n//       </ButtonsContainer>\n//       {comments.length > 0 ? (\n//         comments.map((comment) => (\n//           <Comment key={comment._id} comment={comment} />\n//         ))\n//       ) : (\n//         <EmptyCommentsText>No Comments for this video</EmptyCommentsText>\n//       )}\n//     </Container>\n//   );\n// };\n\n// export default Comments;","map":{"version":3,"names":["React","useEffect","useState","styled","Comment","axiosInstance","Swal","Container","div","theme","text","NewComment","Avatar","img","Input","input","softHr","EmptyCommentsText","span","Button","button","ButtonsContainer"],"sources":["E:/UT - Semester 1/YouTubeClone/frontend/src/components/Comments.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Comment from \"./Comment\";\r\nimport { axiosInstance } from \"../utils/axiosConfig\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 30px;\r\n  color: ${({ theme }) => theme.text};\r\n`;\r\n\r\nconst NewComment = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 20px;\r\n`;\r\n\r\nconst Avatar = styled.img`\r\n  width: 50px;\r\n  height: 50px;\r\n  border-radius: 50%;\r\n  background-color: #999;\r\n`;\r\n\r\nconst Input = styled.input`\r\n  width: 100%;\r\n  padding: 5px;\r\n  border: none;\r\n  border-bottom: 1px solid ${({ theme }) => theme.softHr};\r\n  background-color: transparent;\r\n  color: ${({ theme }) => theme.text};\r\n  outline: none;\r\n`;\r\n\r\nconst EmptyCommentsText = styled.span``;\r\n\r\nconst Button = styled.button`\r\n  padding: 5px 15px;\r\n  background-color: transparent;\r\n  border: 1px solid #3ea6ff;\r\n  color: #3ea6ff;\r\n  cursor: pointer;\r\n  border-radius: 3px;\r\n  font-weight: 500;\r\n`;\r\n\r\nconst ButtonsContainer = styled.div`\r\n  display: flex;\r\n  justify-content: end;\r\n  gap: 5px;\r\n`;\r\n\r\n// const Comments = ({ videoId, loggedInUser }) => {\r\n//   const [comments, setComments] = useState([]);\r\n//   const [newCommentText, setNewCommentText] = useState(\"\");\r\n//   const [toggleCommentButtons, settoggleCommentButtons] = useState(false);\r\n\r\n//   useEffect(() => {\r\n//     const fetchComments = async () => {\r\n//       try {\r\n//         const res = await axiosInstance.get(`/comments/${videoId}`);\r\n//         console.log(res.data);\r\n//         setComments((prev) => res.data.comments);\r\n//       } catch (error) {\r\n//         console.log(error);\r\n//         Swal.fire({\r\n//           icon: \"error\",  \r\n//           title: \"Error\",\r\n//           text: error.response.data.error || \"Error while fetching comments\",\r\n//         });\r\n//       }\r\n//     };\r\n\r\n//     fetchComments();\r\n//   }, [videoId]);\r\n\r\n//   const handleCommentSubmission = async (e) => {\r\n//     console.log(newCommentText);\r\n//     if (!loggedInUser) {\r\n//       Swal.fire({\r\n//         icon: \"error\",\r\n//         title: \"Oops...\",\r\n//         text: \"Sign In required!\",\r\n//       });\r\n//       settoggleCommentButtons((prev) => false);\r\n//       return;\r\n//     }\r\n//     try {\r\n//       const res = await axiosInstance.post(`/comments`, {\r\n//         videoId,\r\n//         description: newCommentText,\r\n//       });\r\n//       Swal.fire(`Good job!`, \"Your comment was Successful!\", \"success\");\r\n//       setComments((prev) => [...prev, res.data.comment]);\r\n//       setNewCommentText(\"\");\r\n//       settoggleCommentButtons((prev) => false);\r\n//     } catch (error) {\r\n//       console.log(error);\r\n//       Swal.fire({\r\n//         icon: \"error\",\r\n//         title: \"Error\",\r\n//         text: error.response.data.error || \"Unable to post a comment\",\r\n//       });\r\n//     }\r\n//   };\r\n\r\n//   const handleCancel = (e) => {\r\n//     setNewCommentText(\"\");\r\n//     settoggleCommentButtons((prev) => false);\r\n//   };\r\n\r\n//   return (\r\n//     <Container>\r\n//       {loggedInUser && (\r\n//         <NewComment>\r\n//           <Avatar src={loggedInUser?.img} />\r\n//           <Input\r\n//             placeholder=\"Add a comment...\"\r\n//             value={newCommentText}\r\n//             onChange={(e) => setNewCommentText(e.target.value)}\r\n//             onFocus={(e) => settoggleCommentButtons((prev) => true)}\r\n//           />\r\n//         </NewComment>\r\n//       )}\r\n\r\n//       <ButtonsContainer style={{ display: !toggleCommentButtons && \"none\" }}>\r\n//         <Button onClick={handleCancel}>Cancel</Button>\r\n//         <Button onClick={handleCommentSubmission}>Comment</Button>\r\n//       </ButtonsContainer>\r\n//       {comments.length > 0 ? (\r\n//         comments.map((comment) => (\r\n//           <Comment key={comment._id} comment={comment} />\r\n//         ))\r\n//       ) : (\r\n//         <EmptyCommentsText>No Comments for this video</EmptyCommentsText>\r\n//       )}\r\n//     </Container>\r\n//   );\r\n// };\r\n\r\n// export default Comments;\r\n"],"mappings":"AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,MAAM,MAAM,mBAAmB;AACtC,OAAOC,OAAO,MAAM,WAAW;AAC/B,SAASC,aAAa,QAAQ,sBAAsB;AACpD,OAAOC,IAAI,MAAM,aAAa;AAE9B,MAAMC,SAAS,GAAGJ,MAAM,CAACK,GAAI;AAC7B;AACA;AACA;AACA,WAAW,CAAC;EAAEC;AAAM,CAAC,KAAKA,KAAK,CAACC,IAAK;AACrC,CAAC;AAED,MAAMC,UAAU,GAAGR,MAAM,CAACK,GAAI;AAC9B;AACA;AACA;AACA,CAAC;AAED,MAAMI,MAAM,GAAGT,MAAM,CAACU,GAAI;AAC1B;AACA;AACA;AACA;AACA,CAAC;AAED,MAAMC,KAAK,GAAGX,MAAM,CAACY,KAAM;AAC3B;AACA;AACA;AACA,6BAA6B,CAAC;EAAEN;AAAM,CAAC,KAAKA,KAAK,CAACO,MAAO;AACzD;AACA,WAAW,CAAC;EAAEP;AAAM,CAAC,KAAKA,KAAK,CAACC,IAAK;AACrC;AACA,CAAC;AAED,MAAMO,iBAAiB,GAAGd,MAAM,CAACe,IAAK,EAAC;AAEvC,MAAMC,MAAM,GAAGhB,MAAM,CAACiB,MAAO;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAED,MAAMC,gBAAgB,GAAGlB,MAAM,CAACK,GAAI;AACpC;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA"},"metadata":{},"sourceType":"module"}