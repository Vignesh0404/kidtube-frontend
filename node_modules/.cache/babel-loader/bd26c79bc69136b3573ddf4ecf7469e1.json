{"ast":null,"code":"var _jsxFileName = \"E:\\\\UT - Semester 1\\\\YouTubeClone\\\\frontend\\\\src\\\\components\\\\Recommendations.jsx\";\nimport React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport styled from \"styled-components\";\nimport { axiosInstance } from \"../utils/axiosConfig\";\nimport Card from \"./Card\";\nimport Swal from \"sweetalert2\";\nimport { fetchRecommendationsError, fetchRecommendationsStart, fetchRecommendationsSuccess } from \"../redux/recommendationsSlice\";\nimport Loader from \"./Loader\";\nconst Recommendation = styled.div`\n  flex: 5;\n`;\nconst Recommendations = ({\n  tags\n}) => {\n  const dispatch = useDispatch();\n  const {\n    videos,\n    loading\n  } = useSelector(state => state.recommendations);\n  useEffect(() => {\n    const fetchVideos = async () => {\n      dispatch(fetchRecommendationsStart());\n      try {\n        const res = await axiosInstance.get(`/videos/tags?tags=${tags}`);\n        dispatch(fetchRecommendationsSuccess(res.data.videos));\n      } catch (error) {\n        console.log(error);\n        Swal.fire({\n          icon: \"error\",\n          title: \"Error\",\n          text: error.response.data.error || \"Error fetching recommendations\"\n        });\n        dispatch(fetchRecommendationsError());\n      }\n    };\n    fetchVideos();\n  }, [dispatch, tags]);\n  if (loading) {\n    return /*#__PURE__*/React.createElement(Loader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 12\n      }\n    });\n  }\n  return /*#__PURE__*/React.createElement(Recommendation, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  }, videos.length > 0 && videos.map(video => /*#__PURE__*/React.createElement(Card, {\n    type: \"recommendations\",\n    key: video._id,\n    video: video,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  })));\n};\nexport default Recommendations;","map":{"version":3,"names":["React","useEffect","useDispatch","useSelector","styled","axiosInstance","Card","Swal","fetchRecommendationsError","fetchRecommendationsStart","fetchRecommendationsSuccess","Loader","Recommendation","div","Recommendations","tags","dispatch","videos","loading","state","recommendations","fetchVideos","res","get","data","error","console","log","fire","icon","title","text","response","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","length","map","video","type","key","_id"],"sources":["E:/UT - Semester 1/YouTubeClone/frontend/src/components/Recommendations.jsx"],"sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport styled from \"styled-components\";\r\nimport { axiosInstance } from \"../utils/axiosConfig\";\r\nimport Card from \"./Card\";\r\nimport Swal from \"sweetalert2\";\r\nimport {\r\n  fetchRecommendationsError,\r\n  fetchRecommendationsStart,\r\n  fetchRecommendationsSuccess,\r\n} from \"../redux/recommendationsSlice\";\r\nimport Loader from \"./Loader\";\r\n\r\nconst Recommendation = styled.div`\r\n  flex: 5;\r\n`;\r\n\r\nconst Recommendations = ({ tags }) => {\r\n  const dispatch = useDispatch();\r\n  const { videos, loading } = useSelector((state) => state.recommendations);\r\n\r\n  useEffect(() => {\r\n    const fetchVideos = async () => {\r\n      dispatch(fetchRecommendationsStart());\r\n      try {\r\n        const res = await axiosInstance.get(`/videos/tags?tags=${tags}`);\r\n        dispatch(fetchRecommendationsSuccess(res.data.videos));\r\n      } catch (error) {\r\n        console.log(error);\r\n        Swal.fire({\r\n          icon: \"error\",\r\n          title: \"Error\",\r\n          text: error.response.data.error || \"Error fetching recommendations\",\r\n        });\r\n        dispatch(fetchRecommendationsError());\r\n      }\r\n    };\r\n\r\n    fetchVideos();\r\n  }, [dispatch, tags]);\r\n\r\n  if (loading) {\r\n    return <Loader />;\r\n  }\r\n\r\n  return (\r\n    <Recommendation>\r\n      {videos.length > 0 &&\r\n        videos.map((video) => (\r\n          <Card type=\"recommendations\" key={video._id} video={video} />\r\n        ))}\r\n    </Recommendation>\r\n  );\r\n};\r\n\r\nexport default Recommendations;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,OAAOC,MAAM,MAAM,mBAAmB;AACtC,SAASC,aAAa,QAAQ,sBAAsB;AACpD,OAAOC,IAAI,MAAM,QAAQ;AACzB,OAAOC,IAAI,MAAM,aAAa;AAC9B,SACEC,yBAAyB,EACzBC,yBAAyB,EACzBC,2BAA2B,QACtB,+BAA+B;AACtC,OAAOC,MAAM,MAAM,UAAU;AAE7B,MAAMC,cAAc,GAAGR,MAAM,CAACS,GAAI;AAClC;AACA,CAAC;AAED,MAAMC,eAAe,GAAGA,CAAC;EAAEC;AAAK,CAAC,KAAK;EACpC,MAAMC,QAAQ,GAAGd,WAAW,CAAC,CAAC;EAC9B,MAAM;IAAEe,MAAM;IAAEC;EAAQ,CAAC,GAAGf,WAAW,CAAEgB,KAAK,IAAKA,KAAK,CAACC,eAAe,CAAC;EAEzEnB,SAAS,CAAC,MAAM;IACd,MAAMoB,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC9BL,QAAQ,CAACP,yBAAyB,CAAC,CAAC,CAAC;MACrC,IAAI;QACF,MAAMa,GAAG,GAAG,MAAMjB,aAAa,CAACkB,GAAG,CAAE,qBAAoBR,IAAK,EAAC,CAAC;QAChEC,QAAQ,CAACN,2BAA2B,CAACY,GAAG,CAACE,IAAI,CAACP,MAAM,CAAC,CAAC;MACxD,CAAC,CAAC,OAAOQ,KAAK,EAAE;QACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;QAClBlB,IAAI,CAACqB,IAAI,CAAC;UACRC,IAAI,EAAE,OAAO;UACbC,KAAK,EAAE,OAAO;UACdC,IAAI,EAAEN,KAAK,CAACO,QAAQ,CAACR,IAAI,CAACC,KAAK,IAAI;QACrC,CAAC,CAAC;QACFT,QAAQ,CAACR,yBAAyB,CAAC,CAAC,CAAC;MACvC;IACF,CAAC;IAEDa,WAAW,CAAC,CAAC;EACf,CAAC,EAAE,CAACL,QAAQ,EAAED,IAAI,CAAC,CAAC;EAEpB,IAAIG,OAAO,EAAE;IACX,oBAAOlB,KAAA,CAAAiC,aAAA,CAACtB,MAAM;MAAAuB,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,CAAE,CAAC;EACnB;EAEA,oBACEvC,KAAA,CAAAiC,aAAA,CAACrB,cAAc;IAAAsB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACZtB,MAAM,CAACuB,MAAM,GAAG,CAAC,IAChBvB,MAAM,CAACwB,GAAG,CAAEC,KAAK,iBACf1C,KAAA,CAAAiC,aAAA,CAAC3B,IAAI;IAACqC,IAAI,EAAC,iBAAiB;IAACC,GAAG,EAAEF,KAAK,CAACG,GAAI;IAACH,KAAK,EAAEA,KAAM;IAAAR,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAC7D,CACW,CAAC;AAErB,CAAC;AAED,eAAezB,eAAe"},"metadata":{},"sourceType":"module"}