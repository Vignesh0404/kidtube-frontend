{"ast":null,"code":"var _jsxFileName = \"E:\\\\github-projects\\\\kidtube\\\\frontend\\\\src\\\\components\\\\UploadProfileImage.jsx\",\n  _s = $RefreshSig$();\nimport { getStorage, ref, uploadBytesResumable, getDownloadURL } from \"firebase/storage\";\nimport { useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport app from \"../firebase\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Input = styled.input`\n  width: 100%;\n  border: 1px solid ${({\n  theme\n}) => theme.softHr};\n  padding: 10px;\n  border-radius: 3px;\n  background-color: transparent;\n  outline: none;\n  color: ${({\n  theme\n}) => theme.text};\n`;\n_c = Input;\nconst Label = styled.label`\n  font-size: 14px;\n`;\n_c2 = Label;\nconst UploadProfileImage = ({\n  img,\n  setImg,\n  imgPerc,\n  setImgUrl,\n  setImgPerc\n}) => {\n  _s();\n  useEffect(() => {\n    const uploadFile = file => {\n      const storage = getStorage(app);\n      const fileName = new Date().getTime() + file.name;\n      const storageRef = ref(storage, \"profileImages/\" + fileName);\n      const uploadTask = uploadBytesResumable(storageRef, file);\n\n      // Listen for state changes, errors, and completion of the upload.\n      uploadTask.on(\"state_changed\", snapshot => {\n        const progress = snapshot.bytesTransferred / snapshot.totalBytes * 100;\n        setImgPerc(Math.round(progress));\n        switch (snapshot.state) {\n          case \"paused\":\n            console.log(\"Upload is paused\");\n            break;\n          case \"running\":\n            console.log(\"Upload is running\");\n            break;\n          default:\n            break;\n        }\n      }, error => {\n        console.log(error);\n        switch (error.code) {\n          case \"storage/unauthorized\":\n            // User doesn't have permission to access the object\n            console.log(error);\n            break;\n          case \"storage/canceled\":\n            // User canceled the upload\n            break;\n          case \"storage/unknown\":\n            // Unknown error occurred, inspect error.serverResponse\n            break;\n          default:\n            break;\n        }\n      }, () => {\n        // Upload completed successfully, now we can get the download URL\n        getDownloadURL(uploadTask.snapshot.ref).then(downloadURL => {\n          setImgUrl(prev => downloadURL);\n        });\n      });\n    };\n    img && uploadFile(img);\n  }, [img, setImgPerc, setImgUrl]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Label, {\n      children: \"Profile Image:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      type: \"file\",\n      accept: \"image/*\",\n      onChange: e => setImg(prev => e.target.files[0])\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), imgPerc > 0 && \"Uploading: \" + imgPerc + \"%\"]\n  }, void 0, true);\n};\n_s(UploadProfileImage, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c3 = UploadProfileImage;\nexport default UploadProfileImage;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Input\");\n$RefreshReg$(_c2, \"Label\");\n$RefreshReg$(_c3, \"UploadProfileImage\");","map":{"version":3,"names":["getStorage","ref","uploadBytesResumable","getDownloadURL","useEffect","styled","app","React","jsxDEV","_jsxDEV","Fragment","_Fragment","Input","input","theme","softHr","text","_c","Label","label","_c2","UploadProfileImage","img","setImg","imgPerc","setImgUrl","setImgPerc","_s","uploadFile","file","storage","fileName","Date","getTime","name","storageRef","uploadTask","on","snapshot","progress","bytesTransferred","totalBytes","Math","round","state","console","log","error","code","then","downloadURL","prev","children","_jsxFileName","lineNumber","columnNumber","type","accept","onChange","e","target","files","_c3","$RefreshReg$"],"sources":["E:/github-projects/kidtube/frontend/src/components/UploadProfileImage.jsx"],"sourcesContent":["import {\r\n  getStorage,\r\n  ref,\r\n  uploadBytesResumable,\r\n  getDownloadURL,\r\n} from \"firebase/storage\";\r\nimport { useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport app from \"../firebase\";\r\nimport React from 'react';\r\n\r\nconst Input = styled.input`\r\n  width: 100%;\r\n  border: 1px solid ${({ theme }) => theme.softHr};\r\n  padding: 10px;\r\n  border-radius: 3px;\r\n  background-color: transparent;\r\n  outline: none;\r\n  color: ${({ theme }) => theme.text};\r\n`;\r\n\r\nconst Label = styled.label`\r\n  font-size: 14px;\r\n`;\r\n\r\nconst UploadProfileImage = ({\r\n  img,\r\n  setImg,\r\n  imgPerc,\r\n  setImgUrl,\r\n  setImgPerc,\r\n}) => {\r\n  useEffect(() => {\r\n    const uploadFile = (file) => {\r\n      const storage = getStorage(app);\r\n      const fileName = new Date().getTime() + file.name;\r\n      const storageRef = ref(storage, \"profileImages/\" + fileName);\r\n      const uploadTask = uploadBytesResumable(storageRef, file);\r\n\r\n      // Listen for state changes, errors, and completion of the upload.\r\n      uploadTask.on(\r\n        \"state_changed\",\r\n        (snapshot) => {\r\n          const progress =\r\n            (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\r\n          setImgPerc(Math.round(progress));\r\n          switch (snapshot.state) {\r\n            case \"paused\":\r\n              console.log(\"Upload is paused\");\r\n              break;\r\n            case \"running\":\r\n              console.log(\"Upload is running\");\r\n              break;\r\n            default:\r\n              break;\r\n          }\r\n        },\r\n        (error) => {\r\n          console.log(error);\r\n          switch (error.code) {\r\n            case \"storage/unauthorized\":\r\n              // User doesn't have permission to access the object\r\n              console.log(error);\r\n              break;\r\n            case \"storage/canceled\":\r\n              // User canceled the upload\r\n              break;\r\n            case \"storage/unknown\":\r\n              // Unknown error occurred, inspect error.serverResponse\r\n              break;\r\n            default:\r\n              break;\r\n          }\r\n        },\r\n        () => {\r\n          // Upload completed successfully, now we can get the download URL\r\n          getDownloadURL(uploadTask.snapshot.ref).then((downloadURL) => {\r\n            setImgUrl((prev) => downloadURL);\r\n          });\r\n        }\r\n      );\r\n    };\r\n\r\n    img && uploadFile(img);\r\n  }, [img, setImgPerc, setImgUrl]);\r\n\r\n  return (\r\n    <>\r\n      <Label>Profile Image:</Label>\r\n      <Input\r\n        type=\"file\"\r\n        accept=\"image/*\"\r\n        onChange={(e) => setImg((prev) => e.target.files[0])}\r\n      />\r\n      {imgPerc > 0 && \"Uploading: \" + imgPerc + \"%\"}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UploadProfileImage;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}