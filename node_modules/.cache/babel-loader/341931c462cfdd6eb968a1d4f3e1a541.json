{"ast":null,"code":"var _jsxFileName = \"E:\\\\UT - Semester 1\\\\YouTubeClone\\\\frontend\\\\src\\\\pages\\\\Home.jsx\";\nimport React from \"react\";\nimport { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport styled from \"styled-components\";\nimport Card from \"../components/Card\";\nimport { axiosInstance } from \"../utils/axiosConfig\";\nimport Swal from \"sweetalert2\";\nimport { fetchVideosError, fetchVideosStart, fetchVideosSuccess } from \"../redux/videosSlice\";\nimport Loader from \"../components/Loader\";\nconst Container = styled.div`\n  display: flex;\n  justify-content: space-between;\n  flex-wrap: wrap;\n`;\nconst Home = ({\n  type\n}) => {\n  const dispatch = useDispatch();\n  const {\n    videos,\n    loading\n  } = useSelector(state => state.videos);\n  useEffect(() => {\n    const fetchVideos = async () => {\n      dispatch(fetchVideosStart());\n      try {\n        const res = await axiosInstance.get(`/videos/${type}`);\n        dispatch(fetchVideosSuccess(res.data.videos));\n      } catch (error) {\n        console.log(error);\n        Swal.fire({\n          icon: \"error\",\n          title: \"Error\",\n          text: error.response.data.error || \"Error fetching videos\"\n        });\n        dispatch(fetchVideosError());\n      }\n    };\n    fetchVideos();\n  }, [dispatch, type]);\n  if (loading) {\n    return /*#__PURE__*/React.createElement(Loader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 12\n      }\n    });\n  }\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  }, videos.length > 0 && videos.map(video => /*#__PURE__*/React.createElement(Card, {\n    key: video._id,\n    video: video,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 31\n    }\n  })));\n};\nexport default Home;","map":{"version":3,"names":["React","useEffect","useDispatch","useSelector","styled","Card","axiosInstance","Swal","fetchVideosError","fetchVideosStart","fetchVideosSuccess","Loader","Container","div","Home","type","dispatch","videos","loading","state","fetchVideos","res","get","data","error","console","log","fire","icon","title","text","response","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","length","map","video","key","_id"],"sources":["E:/UT - Semester 1/YouTubeClone/frontend/src/pages/Home.jsx"],"sourcesContent":["import React from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport styled from \"styled-components\";\r\nimport Card from \"../components/Card\";\r\nimport { axiosInstance } from \"../utils/axiosConfig\";\r\nimport Swal from \"sweetalert2\";\r\nimport {\r\n  fetchVideosError,\r\n  fetchVideosStart,\r\n  fetchVideosSuccess,\r\n} from \"../redux/videosSlice\";\r\nimport Loader from \"../components/Loader\";\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  flex-wrap: wrap;\r\n`;\r\n\r\nconst Home = ({ type }) => {\r\n  const dispatch = useDispatch();\r\n  const { videos, loading } = useSelector((state) => state.videos);\r\n\r\n  useEffect(() => {\r\n    const fetchVideos = async () => {\r\n      dispatch(fetchVideosStart());\r\n      try {\r\n        const res = await axiosInstance.get(`/videos/${type}`);\r\n        dispatch(fetchVideosSuccess(res.data.videos));\r\n      } catch (error) {\r\n        console.log(error);\r\n        Swal.fire({\r\n          icon: \"error\",\r\n          title: \"Error\",\r\n          text: error.response.data.error || \"Error fetching videos\",\r\n        });\r\n        dispatch(fetchVideosError());\r\n      }\r\n    };\r\n\r\n    fetchVideos();\r\n  }, [dispatch, type]);\r\n\r\n  if (loading) {\r\n    return <Loader />;\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      {videos.length > 0 &&\r\n        videos.map((video) => <Card key={video._id} video={video} />)}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,OAAO;AACjC,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,OAAOC,MAAM,MAAM,mBAAmB;AACtC,OAAOC,IAAI,MAAM,oBAAoB;AACrC,SAASC,aAAa,QAAQ,sBAAsB;AACpD,OAAOC,IAAI,MAAM,aAAa;AAC9B,SACEC,gBAAgB,EAChBC,gBAAgB,EAChBC,kBAAkB,QACb,sBAAsB;AAC7B,OAAOC,MAAM,MAAM,sBAAsB;AAEzC,MAAMC,SAAS,GAAGR,MAAM,CAACS,GAAI;AAC7B;AACA;AACA;AACA,CAAC;AAED,MAAMC,IAAI,GAAGA,CAAC;EAAEC;AAAK,CAAC,KAAK;EACzB,MAAMC,QAAQ,GAAGd,WAAW,CAAC,CAAC;EAC9B,MAAM;IAAEe,MAAM;IAAEC;EAAQ,CAAC,GAAGf,WAAW,CAAEgB,KAAK,IAAKA,KAAK,CAACF,MAAM,CAAC;EAEhEhB,SAAS,CAAC,MAAM;IACd,MAAMmB,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC9BJ,QAAQ,CAACP,gBAAgB,CAAC,CAAC,CAAC;MAC5B,IAAI;QACF,MAAMY,GAAG,GAAG,MAAMf,aAAa,CAACgB,GAAG,CAAE,WAAUP,IAAK,EAAC,CAAC;QACtDC,QAAQ,CAACN,kBAAkB,CAACW,GAAG,CAACE,IAAI,CAACN,MAAM,CAAC,CAAC;MAC/C,CAAC,CAAC,OAAOO,KAAK,EAAE;QACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;QAClBjB,IAAI,CAACoB,IAAI,CAAC;UACRC,IAAI,EAAE,OAAO;UACbC,KAAK,EAAE,OAAO;UACdC,IAAI,EAAEN,KAAK,CAACO,QAAQ,CAACR,IAAI,CAACC,KAAK,IAAI;QACrC,CAAC,CAAC;QACFR,QAAQ,CAACR,gBAAgB,CAAC,CAAC,CAAC;MAC9B;IACF,CAAC;IAEDY,WAAW,CAAC,CAAC;EACf,CAAC,EAAE,CAACJ,QAAQ,EAAED,IAAI,CAAC,CAAC;EAEpB,IAAIG,OAAO,EAAE;IACX,oBAAOlB,KAAA,CAAAgC,aAAA,CAACrB,MAAM;MAAAsB,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,CAAE,CAAC;EACnB;EAEA,oBACEtC,KAAA,CAAAgC,aAAA,CAACpB,SAAS;IAAAqB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACPrB,MAAM,CAACsB,MAAM,GAAG,CAAC,IAChBtB,MAAM,CAACuB,GAAG,CAAEC,KAAK,iBAAKzC,KAAA,CAAAgC,aAAA,CAAC3B,IAAI;IAACqC,GAAG,EAAED,KAAK,CAACE,GAAI;IAACF,KAAK,EAAEA,KAAM;IAAAR,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAAC,CACrD,CAAC;AAEhB,CAAC;AAED,eAAexB,IAAI"},"metadata":{},"sourceType":"module"}