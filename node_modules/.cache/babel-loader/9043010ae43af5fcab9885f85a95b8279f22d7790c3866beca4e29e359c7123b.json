{"ast":null,"code":"var _jsxFileName = \"E:\\\\github-projects\\\\kidtube\\\\frontend\\\\src\\\\components\\\\Comments.jsx\",\n  _s = $RefreshSig$();\nimport { axiosInstance } from \"../utils/axiosConfig\";\nimport React, { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport styled from \"styled-components\";\nimport Comment from \"./Comment\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Container = styled.div``;\n_c = Container;\nconst NewComment = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 10px;\n`;\n_c2 = NewComment;\nconst Avatar = styled.img`\n  width: 50px;\n  height: 50px;\n  border-radius: 50%;\n`;\n_c3 = Avatar;\nconst Input = styled.input`\n  border: none;\n  border-bottom: 1px solid ${({\n  theme\n}) => theme.soft};\n  color: ${({\n  theme\n}) => theme.text};\n  background-color: transparent;\n  outline: none;\n  padding: 5px;\n  width: 100%;\n`;\n_c4 = Input;\nconst Button = styled.button`\n  padding: 5px 15px;\n  background-color: transparent;\n  border: 1px solid black;\n  color: white;\n  display: flex;\n  align-items: center;\n  gap: 5px;\n  cursor: pointer;\n  border-radius: 5px;\n  font-weight: 500;\n  background: black\n`;\n_c5 = Button;\nconst Comments = ({\n  videoId\n}) => {\n  _s();\n  const navigate = useNavigate();\n  const {\n    loggedInUser\n  } = useSelector(state => state.user);\n  const [comments, setComments] = useState([]);\n  const navigateToSignin = () => {\n    navigate('/signin');\n  };\n  useEffect(() => {\n    const fetchComments = async () => {\n      try {\n        const res = await axiosInstance.get(`/comments/${videoId}`); // fetch all comments of a video\n        setComments(res.data);\n      } catch (err) {}\n    };\n    fetchComments();\n  }, [videoId]);\n\n  //TODO: ADD NEW COMMENT FUNCTIONALITY\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(NewComment, {\n      children: [loggedInUser ? /*#__PURE__*/_jsxDEV(Avatar, {\n        src: loggedInUser.img,\n        alt: \"channel-img\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 12\n      }, this) : /*#__PURE__*/_jsxDEV(Avatar, {\n        src: \"https://cdn.pixabay.com/photo/2015/10/05/22/37/blank-profile-picture-973460_640.png\",\n        alt: \"channel-img\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 12\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        type: \"text\",\n        placeholder: \"Add a comment...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), loggedInUser ? /*#__PURE__*/_jsxDEV(Button, {\n        children: \"Comment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 12\n      }, this) // TODO: post comment if user is loggedin\n      : /*#__PURE__*/_jsxDEV(Button, {\n        onClick: navigateToSignin,\n        children: \"Comment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 12\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), comments.map(comment => /*#__PURE__*/_jsxDEV(Comment, {\n      comment: comment\n    }, comment._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n_s(Comments, \"SP5SrysAWZ3FtXPL0hnzMPuGe+o=\", false, function () {\n  return [useNavigate, useSelector];\n});\n_c6 = Comments;\nexport default Comments;\nvar _c, _c2, _c3, _c4, _c5, _c6;\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"NewComment\");\n$RefreshReg$(_c3, \"Avatar\");\n$RefreshReg$(_c4, \"Input\");\n$RefreshReg$(_c5, \"Button\");\n$RefreshReg$(_c6, \"Comments\");","map":{"version":3,"names":["axiosInstance","React","useEffect","useState","useSelector","styled","Comment","Link","useNavigate","jsxDEV","_jsxDEV","Container","div","_c","NewComment","_c2","Avatar","img","_c3","Input","input","theme","soft","text","_c4","Button","button","_c5","Comments","videoId","_s","navigate","loggedInUser","state","user","comments","setComments","navigateToSignin","fetchComments","res","get","data","err","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onClick","map","comment","_id","_c6","$RefreshReg$"],"sources":["E:/github-projects/kidtube/frontend/src/components/Comments.jsx"],"sourcesContent":["import { axiosInstance } from \"../utils/axiosConfig\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport styled from \"styled-components\";\r\nimport Comment from \"./Comment\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\n\r\nconst Container = styled.div``;\r\n\r\nconst NewComment = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 10px;\r\n`;\r\n\r\nconst Avatar = styled.img`\r\n  width: 50px;\r\n  height: 50px;\r\n  border-radius: 50%;\r\n`;\r\n\r\nconst Input = styled.input`\r\n  border: none;\r\n  border-bottom: 1px solid ${({ theme }) => theme.soft};\r\n  color: ${({ theme }) => theme.text};\r\n  background-color: transparent;\r\n  outline: none;\r\n  padding: 5px;\r\n  width: 100%;\r\n`;\r\n\r\nconst Button = styled.button`\r\n  padding: 5px 15px;\r\n  background-color: transparent;\r\n  border: 1px solid black;\r\n  color: white;\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 5px;\r\n  cursor: pointer;\r\n  border-radius: 5px;\r\n  font-weight: 500;\r\n  background: black\r\n`;\r\n\r\nconst Comments = ({videoId}) => {\r\n  const navigate = useNavigate();\r\n  const { loggedInUser } = useSelector((state) => state.user)\r\n  const [comments, setComments] = useState([]);\r\n\r\n  const navigateToSignin = () => {\r\n    navigate('/signin');\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchComments = async () => {\r\n      try {\r\n        const res = await axiosInstance.get(`/comments/${videoId}`); // fetch all comments of a video\r\n        setComments(res.data);\r\n      } catch (err) {}\r\n    };\r\n    fetchComments();\r\n  }, [videoId]);\r\n\r\n  //TODO: ADD NEW COMMENT FUNCTIONALITY\r\n\r\n  return (\r\n    <Container>\r\n      <NewComment>\r\n        { loggedInUser ?\r\n          (<Avatar src={loggedInUser.img} alt=\"channel-img\"/>)\r\n          :\r\n          (<Avatar src=\"https://cdn.pixabay.com/photo/2015/10/05/22/37/blank-profile-picture-973460_640.png\" alt=\"channel-img\"/>)\r\n        }\r\n        <Input type=\"text\" placeholder=\"Add a comment...\" />\r\n        {loggedInUser ? \r\n          (<Button>Comment</Button>) // TODO: post comment if user is loggedin\r\n          :\r\n          (<Button onClick={navigateToSignin}>Comment</Button>)\r\n        }\r\n      </NewComment>\r\n      {comments.map(comment=>(\r\n        <Comment key={comment._id} comment={comment}/>\r\n      ))}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Comments;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}